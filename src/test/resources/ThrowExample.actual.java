Rolled 2
Rolled 2
Rolled 1
Rolled 4
package org.katie.parrot.examples;

import static org.mockito.ArgumentMatchers.*;
import static org.mockito.Mockito.doReturn;

import java.lang.RuntimeException;
import org.ingko.core.serde.DefaultSerde;
import org.ingko.examples.ThrowExample;
import org.mockito.Mockito;

public class MockCreator {
  private static final DefaultSerde defaultSerde = new DefaultSerde();

  public static ThrowExample.ErrorDice create() {
    RuntimeException runtimeException1 = (RuntimeException) defaultSerde.deserialize("");
    ThrowExample.ErrorDice mockErrorDice1 = Mockito.mock(ThrowExample.ErrorDice.class);
    doReturn(2).doReturn(2).doThrow(runtimeException1).doReturn(1).doReturn(4).when(mockErrorDice1).roll();
    return mockErrorDice1;
  }
}

